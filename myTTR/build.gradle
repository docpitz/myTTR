apply plugin: 'jacoco'
apply plugin: 'com.android.application'
apply plugin: 'com.github.kt3k.coveralls'

android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.jmelzer.myttr"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 15
        versionName "1.6.0"
    }
    buildTypes {
        release {
            minifyEnabled true
        }
        debug {
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
    jacoco {
        version = "0.7.2.201409121644"
    }
}
dependencies {
    compile 'com.android.support:appcompat-v7:22.+'
    compile 'com.getbase:floatingactionbutton:1.7.0'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.3.1'
    // Robolectric
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.1'
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    testCompile 'org.hamcrest:hamcrest-integration:1.1'
    testCompile('org.robolectric:robolectric:2.4') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
    //    compile group: 'ch.acra' , name: 'acra' , version: '4.5.0'
}
//
task jacocoReport << {
    ant {
        taskdef(name:'jacocoreport',
                classname: 'org.jacoco.ant.ReportTask',
                classpath: configurations.jacocoReport.asPath)

        mkdir dir: "${buildDir}/test-coverage-report"
        mkdir dir: "${buildDir}/reports/jacoco/test/"

        jacocoreport {
            executiondata {
                fileset dir: "${buildDir}/jacoco"
            }

            structure(name: "${rootProject.name}") {
                classfiles {
                    fileset (dir: "${buildDir}/intermediates/classes/debug") {
                        exclude(name: '**/R.class')
                        exclude(name: '**/R$*.class')
                    }
                }

                sourcefiles {
                    fileset dir: "src/main/java"
                    fileset dir: 'build/generated/source/buildConfig/debug'
                }
            }

            xml destfile: "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
            html destdir: "${buildDir}/test-coverage-report/"
        }
    }
}

coveralls.jacocoReportPath = 'build/outputs/reports/coverage/debug/report.xml'